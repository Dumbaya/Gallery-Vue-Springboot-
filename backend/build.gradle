plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.5'
	id 'io.spring.dependency-management' version '1.1.4'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '21'
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.projectlombok:lombok'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5'
	implementation 'org.glassfish.jaxb:jaxb-runtime:2.3.2'
	implementation 'javax.xml.bind:jaxb-api:2.3.1'
}

tasks.named('test') {
	useJUnitPlatform()
}

/*tasks.withType(JavaCompile) {
	options.compilerArgs += '--add-exports java.xml.bind/com.sun.xml.internal.bind.v2.runtime=ALL-UNNAMED'
	options.compilerArgs += '--add-opens java.xml.bind/com.sun.xml.internal.bind.v2.runtime.reflect=ALL-UNNAMED'
}

tasks.withType(Test) {
	jvmArgs += '--add-exports java.xml.bind/com.sun.xml.internal.bind.v2.runtime=ALL-UNNAMED'
	jvmArgs += '--add-opens java.xml.bind/com.sun.xml.internal.bind.v2.runtime.reflect=ALL-UNNAMED'
}*/
